name: Build and Deploy to Dev

on:
  pull_request:
    types: [opened, synchronize, reopened]
    branches:
      - main
      - develop

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: read
      statuses: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: '**/package-lock.json'

      - name: Install dependencies
        run: npm ci --no-audit --no-fund

      - name: Build
        run: npm run build

      - name: Create issue if build fails
        if: failure()
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          ACTION_TYPE: 'Build'
          URL_ACTION_RUN: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          BRANCH: ${{ github.ref }}
        with:
          assignees: ${{ github.event.sender.login }}
      - name: Comment on PR if failed
        if: failure()
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          msg: 'Falló el build de la rama :disappointed:. Por favor revisa los errores y toma las medidas necesarias. Action Run: [Action](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})'
      - name: Comment on PR
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          msg: 'El build ha sido exitoso :+1: :thumbsup:.'
  deploy:
    if: github.event.pull_request.base.ref == 'develop'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Get repository name
        id: repo-name
        uses: MariachiBear/get-repo-name-action@v1.1.0
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{steps.repo-name.outputs.repository-name}}:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/${{steps.repo-name.outputs.repository-name}}:${{github.sha}}
      - name: Deploy to Dev - Render
        uses: fjogeleit/http-request-action@v1
        with:
          url: ${{ secrets.RENDER_DEPLOY_HOOK }}
          method: GET

      - name: Create issue if build fails
        if: failure()
        uses: JasonEtco/create-an-issue@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          ACTION_TYPE: 'Deploy to Dev'
          URL_ACTION_RUN: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          BRANCH: ${{ github.ref }}
        with:
          assignees: ${{ github.event.sender.login }}

      - name: Comment on PR if failed
        if: failure()
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          msg: 'Ocurrió un error al desplegar la rama. Por favor revisa los errores y toma las medidas necesarias. Action Run: [Action](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}).'
      - name: Comment on PR
        uses: unsplash/comment-on-pr@v1.3.0
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
        with:
          msg: 'El despliegue del Enrtorno de desarrollo ha sido exitoso :+1: :thumbsup:. Url: [Dev](https://dev-adoptree.onrender.com/)'
          check_for_duplicate_msg: false
